#include "TXLib.h"

struct cat
{
    HDC R;
    HDC L;
    HDC U;
    HDC D;
    HDC RD;
    HDC LD;
    HDC RU;
    HDC LU;
    HDC image;
    int w;
    int h;
    int x;
    int y;
    int v;
    int v1;
    int nKad;
    void drawCat()
    {
        txTransparentBlt(txDC(),x,y,w,h,image,w*nKad,0,RGB(150,150,100));
        if (image == R|| image == L )
        {
            txTransparentBlt (txDC(), x, y, w, h, image, w*nKad, 0, RGB(150,150,100));
        }
        else if (image == U || image == D )
        {
            txTransparentBlt (txDC(), x, y, h, w, image, w*nKad, 0, RGB(150,150,100));
        }
        if(GetAsyncKeyState ('W') and !GetAsyncKeyState ('D') and !GetAsyncKeyState ('A'))
        {
                image=U;
                y -= v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('S') and !GetAsyncKeyState ('D') and !GetAsyncKeyState ('A'))
        {
                image = D;
                y += v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('A') and !GetAsyncKeyState ('S') and !GetAsyncKeyState ('W'))
        {
                image = L;
                x -= v;
                nKad += 1;
                if (nKad>=3) nKad=0;

        }
        if(GetAsyncKeyState ('D') and !GetAsyncKeyState ('S') and !GetAsyncKeyState ('W'))
        {
                image = R;
                x += v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('D') and GetAsyncKeyState ('S'))
        {
                image = RD;
                x += v;
                y += v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('D') and GetAsyncKeyState ('W'))
        {
                image = RU ;
                x += v;
                y -= v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('A') and GetAsyncKeyState ('S'))
        {
                image = LD ;
                x -= v;
                y += v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(GetAsyncKeyState ('A') and GetAsyncKeyState ('W'))
        {
                image = LU ;
                x -= v;
                y -= v;
                nKad += 1;
                if (nKad>=3) nKad=0;
        }
        if(!GetAsyncKeyState ('S') and !GetAsyncKeyState ('A') and !GetAsyncKeyState ('W') and !GetAsyncKeyState ('D'))
        {
                nKad = 0;
        }

    }
};
struct button
{
  int x;
  int y;
  int w;
  int h;
  const char* text;
  int colorVny;
  int colorVne;
  int r;

  void draw()
    {
     txSetColor(colorVne);
     txSetFillColor(colorVny);
     txSelectFont ("Comic Sans MS", r);
     txRectangle(x,y,x+w,y+h);
     txDrawText(x, y, x+w, y+h, text);
    }
};
struct Icon
{
    int x;
    int y;
    int w;
    int h;
    HDC image;
    bool draw;
    void paint()
    {
        if(draw)
        {
            txTransparentBlt(txDC(),x,y,w,h,image,0,0,RGB(50,201,72));
        }
        else
        {
            txTransparentBlt(txDC(),x,y,w,h,image,200,0,RGB(50,201,72));
        }
    }
};
struct dialog
{
    int x;
    int y;
    int w;
    int h;
    HDC image;
    const char* text;
    int r;
    COLORREF colorVny;
    COLORREF colorVne; \
    bool v;

    void draw()
    {
        if(v == true)
        {
            txSetColor(colorVne);
            txSetFillColor(colorVny);
            txBitBlt(txDC(),x,y,w,h,image);
            txSelectFont ("Comic Sans MS", r);
            txDrawText(x+20,y+25,x+w-25,y+h-100,text);
        }
    }
};
struct gran
{
    int x;
    int y;
    int w;
    int h;
    int n;
    HDC image;
    bool v;
    void draw()
    {
        if(v = true)
        {
            txTransparentBlt(txDC(),x,y, w,h,image, w*n, 0,RGB(150,150,150));
        }
    }
};
struct hpBar
{
    int x;
    int y;
    HDC image;
    int w;
    int h;
    int hp;
    void draw()
    {
        char str[50];
        sprintf(str,"%d",hp);
        txTransparentBlt(txDC(),x,y, w,h,image, 0, 0,TX_WHITE);
        txSetColor(RGB(201,16,16));
        txSetFillColor(RGB(234,19,19));
        txRectangle(x+92,y+17,x+92+hp*2.6,y+83);
        txSetColor(RGB(26,2,7));
        txSetFillColor(RGB(26,2,7));
        txSelectFont ("Bahnschrift", 45);
        txDrawText(x+25,y+27,x+83,y+66,str);
    }
};
struct Prizrak
{
    int x;
    int y;
    int w;
    int h;
    HDC L;
    HDC R;
    HDC image;
    int n;
    int x1;
    int y1;
    int t;
    int v;
    void draw(int x1, int y1)
    {
        int vx = (abs(x1-x))/t;
        int vy = (abs(y1-y))/t;
        txTransparentBlt(txDC(),x,y, w,h,image, w*n, 0,RGB(34,177,76));
        if(x1 > x and y1 > y)
        {
            image = R;
            x += vx;
            y += vy;
            n += 1;
            if (n>=4) n=0;
        }
        if(x1 > x and y1 < y)
        {
            image = R;
            x += vx;
            y -= vy;
            n += 1;
            if (n>=4) n=0;
        }
        if(x1 < x and y1 > y)
        {
            image = L;
            x -= vx;
            y += vy;
            n += 1;
            if (n>=4) n=0;
        }
        if(x1 < x and y1 < y)
        {
            image = L;
            x -= vx;
            y -= vy;
            n += 1;
            if (n>=4) n=0;
        }
        if(abs(x1-x)<= 400)
        {
            vx = v;
        }
        if(abs(y1-y) <= 400)
        {
            vy = v;
        }


    }
};
struct plant
{
    int x;
    int y;
    int w;
    int h;
    HDC image;
    int x1;
    int y1;
    int w1;
    int h1;
    int n;
    bool v;

    void draw(int x1,int y1)
    {
        if(((x1+30<x+w) and
            (x1+w1-30>x) and
            (y1+30<y+h) and
            (y1+h1-30>y) and
            (txMouseButtons() == 1)) or v == false)
        {
            n += 1;
            txTransparentBlt(txDC(),x-10000,y, w,h,image, 0, 0,RGB(0,0,255));
            v = false;
        }
        else
        {
            txTransparentBlt(txDC(),x,y, w,h,image, 0, 0,RGB(0,0,255));
        }
    }
};
int main()
{
    txCreateWindow (1920, 1080);
    txSetColor (TX_WHITE, 5);

    string page = "menu";

    //локации
    HDC location=txLoadImage("лока/лока.bmp");
    HDC house=txLoadImage("лока/дом.bmp");
    HDC kushat=txLoadImage("лока/кушац.bmp");
    HDC kv1=txLoadImage("лока/квест1.bmp");
    HDC end1 = txLoadImage("лока/конец1.bmp");

    //персонажи
    cat cat = {txLoadImage("cat/catR.bmp"),txLoadImage("cat/catL.bmp"),txLoadImage("cat/catU.bmp"),txLoadImage("cat/catD.bmp"),txLoadImage("cat/catRD.bmp"),txLoadImage("cat/catLD.bmp"),txLoadImage("cat/catRU.bmp"),txLoadImage("cat/catLU.bmp"),cat.R,83.3,83.3,800,425,15,cat.v/1.5,0};
    HDC cat2 = txLoadImage("cat/кошка.bmp");
    HDC sleep = txLoadImage("cat/sleep.bmp");
    gran G = {150,450,350,350,0,txLoadImage("бабул€.bmp")};
    Prizrak ghost = {250,250,107.75,120,txLoadImage("ghost/ghostL.bmp"),txLoadImage("ghost/ghostR.bmp"),ghost.R,0,cat.x,cat.y,9,1};
    Prizrak ghost1 = {1500,250,107.75,120,txLoadImage("ghost/ghostL.bmp"),txLoadImage("ghost/ghostR.bmp"),ghost.R,0,cat.x,cat.y,10,2};
    Prizrak ghost2 = {750,800,107.75,120,txLoadImage("ghost/ghostL.bmp"),txLoadImage("ghost/ghostR.bmp"),ghost.R,0,cat.x,cat.y,6,2.5};

    //концовки
    HDC Lose=txLoadImage("концовки/котѕлакѕлак.bmp");
    HDC Victory=txLoadImage("концовки/кот”ра”ра.bmp");
    HDC Alone=txLoadImage("концовки/кот’нык’нык.bmp");

    //прочее
    HDC plate=txLoadImage("тарелочка.bmp");
    Icon c1 = {590,450,200,200,txLoadImage("иконки/кот»конка.bmp"),true};
    Icon c2 = {590,450,200,175,txLoadImage("иконки/кошка»конка.bmp"),true};
    dialog DI = {1,1,720,469,txLoadImage("диалог.bmp"),"d",50,RGB(150, 108, 33),RGB(133, 98, 37)};
    hpBar helf = {210,850,txLoadImage("hpBar.bmp"),373,100,30};
    button btnSt = {500,250,150,75,"—“ј–“",TX_WHITE,TX_RED,30};
    button btnHe = {750,500,150,75,"ѕјћј√»“≈",TX_WHITE,TX_RED,30};
    button btnEx = {1000,750,150,75,"”…“»",TX_WHITE,TX_RED,30};
    button btnV1 = {850,700,200,75,"ћя”",RGB(227, 185, 109),RGB(133, 98, 37),100};
    button btnV2 = {600,700,200,75,"*«јЎ»ѕ≈“№*",RGB(227, 185, 109),RGB(133, 98, 37),38};

    //растени€
    plant astr1 = {407,66,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr2 = {1040,670-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr3 = {1401,300-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr4 = {1690,854-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr5 = {1258,847-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr6 = {530,852-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr7 = {140,672-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant astr8 = {795,314-246,130,246,txLoadImage("цветки/астра.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};

    plant aloe1 = {601,305-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe2 = {324,662-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe3 = {1619,487-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe4 = {1203,300-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe5 = {191,482-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe6 = {765,669-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe7 = {1040,862-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant aloe8 = {1455,661-147,130,147,txLoadImage("цветки/алоэ.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};

    plant cact1 = {200,306-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact2 = {310,840-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact3 = {780,488-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact4 = {553,650-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact5 = {1014,301-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact6 = {1240,650-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact7 = {1426,480-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant cact8 = {1597,306-177,130,177,txLoadImage("цветки/кактус.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};

    plant sun1 = {110,854-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun2 = {384,485-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun3 = {583,482-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun4 = {750,850-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun5 = {1030,500-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun6 = {1233,500-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun7 = {1488,850-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};
    plant sun8 = {1672,672-254,130,254,txLoadImage("цветки/ѕодсолнух.bmp"),cat.x,cat.y,cat.w,cat.h,0,true};

    int xL = 0; int yL = 0;
    int nKad = 0;
    int nK = 0;
    int da = 0;
    bool popil = false;
    bool sten = false;
    int kadr = 0;
    int time = 600;
    bool kvest = false;
    bool fight = false;
    bool vibor = false;
    bool task1 = false;
    bool task2 = false;
    bool task3 = false;

    int nA = 0;
    int nAl = 0;
    int nC = 0;
    int nP = 0;

    char str[50];

    char P[50];
    char L[50];
    char K[50];
    char A[50];

    char a[50];
    char b[50];

    while (page != "exit")
    {
        txSetFillColor(TX_BLACK);
        txClear();
        txBegin();
        txSetFillColor (TX_WHITE);

        if(helf.hp == 0)
        {
            txSleep(2000);
            page = "lose";
        }

        if(GetAsyncKeyState ('P'))
            {
               page = "exit";
            }

         //меню
        if(page == "menu")
        {
            btnSt.draw();
            btnHe.draw();
            btnEx.draw();
            if( txMouseButtons() == 1 and
                btnSt.x < txMouseX() and txMouseX() < btnSt.w + btnSt.x and
                btnSt.y < txMouseY() and txMouseY() < btnSt.y + btnSt.h)
            {
                page = "street";
            }
            if( txMouseButtons() == 1 and
                btnHe.x < txMouseX() and txMouseX() < btnHe.w + btnHe.x and
                btnHe.y < txMouseY() and txMouseY() < btnHe.y + btnHe.h)
            {
                page = "help";
            }
            if( txMouseButtons() == 1 and
                btnEx.x < txMouseX() and txMouseX() < btnEx.w + btnEx.x and
                btnEx.y < txMouseY() and txMouseY() < btnEx.y + btnEx.h)
            {
                page = "exit";
            }
        }

        if(page == "help")
        {
            btnEx.draw();
            txSetColor(TX_WHITE);
            txDrawText(500,500,1000,1000,"ну сам как-нибудь");
            if( txMouseButtons() == 1 and
                btnEx.x < txMouseX() and txMouseX() < btnEx.w + btnEx.x and
                btnEx.y < txMouseY() and txMouseY() < btnEx.y + btnEx.h)
            {
                page = "menu";
            }
        }

        //игра
        if(page == "street")
        {
            if(GetAsyncKeyState ('T'))
            {
                ghost.x = 1000;
                ghost.y = 750;
                fight = true;
            }
            if(GetAsyncKeyState ('F'))
            {
                fight = false;
            }
            if(GetAsyncKeyState ('J'))
            {
                page = "kvest1";
            }
            if(GetAsyncKeyState ('L') and GetAsyncKeyState ('O'))
            {
                time = 1;
            }
            txBitBlt(txDC(),xL,yL,1920,1080,location);
            cat.drawCat();
            helf.draw();
            if (txMouseButtons() == 2 and
                1725 <= txMouseX() and txMouseX() <= 1805 and
                320 <= txMouseY() and txMouseY() <= 400 and
                1700 <= cat.x and cat.x <= 1775 and
                350 <= cat.y and cat.y <= 380)
            {
                page = "dom";
            }
            if (popil == true)
            {
                txTransparentBlt(txDC(),650,386,93,50,cat2,0,0,RGB(0,0,0));
                if(cat.x < 1130 and cat.y < 530)
                {
                    page = "сцена";
                }
            }
            if(sten == true)
            {
                popil = false;
            }
            if(fight == true and time !=0)
            {
                ghost.draw(cat.x, cat.y);
                ghost1.draw(cat.x, cat.y);
                ghost2.draw(cat.x, cat.y);
                txSetColor(TX_WHITE);
                time -= 1;
                txSelectFont ("Comic Sans MS", 50);
                sprintf(str,"0:%d",time/10);
                txTextOut(340,240,str);

                if (((cat.x+30<ghost.x+ghost.w) &&
                    (cat.x+cat.w-30>ghost.x) &&
                    (cat.y+30<ghost.y+ghost.h) &&
                    (cat.y+cat.h-30>ghost.y)) or
                    ((cat.x+30<ghost1.x+ghost1.w) &&
                    (cat.x+cat.w-30>ghost1.x) &&
                    (cat.y+30<ghost1.y+ghost1.h) &&
                    (cat.y+cat.h-30>ghost1.y)) or
                    ((cat.x+30<ghost2.x+ghost2.w) &&
                    (cat.x+cat.w-30>ghost2.x) &&
                    (cat.y+30<ghost2.y+ghost2.h) &&
                    (cat.y+cat.h-30>ghost2.y)))
                {
                    helf.hp -= 1;
                }
            }
            if(fight == true and time <= 0)
            {
                txBitBlt(txDC(),0,0,1920,1080,end1);
                txTransparentBlt(txDC(),830,400, 886,600,sleep, 886*da, 0,RGB(150,150,100));
                time -= 1;
                da += 1;
                txSleep(150);
                if(da>3)
                {
                    da = 0;
                }
                if(time <= -50)
                {
                    page = "alone";
                }

            }

            int x = txMouseX();
            int y = txMouseY();
            sprintf(a,"%d",x);
            sprintf(b,"%d",y);
            txTextOut(500,400,a);
            txTextOut(500,420,b);

        }

        if(page == "dom")
        {
            if (sten == false)
            {
                txBitBlt(txDC(),0,0,1920,1080,house);
                G.draw();
                DI.x = 550; DI.y = 475; DI.r = 50; DI.text = "ѕривет котенок, что ты тут делаешь?"; DI.draw();
                btnV1.draw();
                btnV2.draw();
                nKad=0;
                if( txMouseButtons() == 1 and
                        btnV1.x < txMouseX() and txMouseX() < btnV1.w + btnV1.x and
                        btnV1.y < txMouseY() and txMouseY() < btnV1.y + btnV1.h)
                    {
                        DI.text = "ќй какой миленький котик, давай \n" "€ тебе молочка налью";  DI.draw();
                        G.n = 2;
                        txSleep(2000);
                        page = "havat";
                    }
                if( txMouseButtons() == 1 and
                        btnV2.x < txMouseX() and txMouseX() < btnV2.w + btnV2.x and
                        btnV2.y < txMouseY() and txMouseY() < btnV2.y + btnV2.h)
                    {
                        DI.text = "— „≈√ќ “џ Ў»ѕ»Ў№ Ќј ћ≈Ќя\n" "ј ≈—Ћ» ” “≈Ѕя Ѕ≈Ў≈ЌЌќ—“№,  џЎ ќ“ —ёƒј"; DI.draw();
                        G.n = 1;
                        txSleep(4500);
                        helf.hp = 0;
                    }
            }
            if(sten == true and page == "dom" and kvest == false and fight == false)
            {
                txBitBlt(txDC(),0,0,1920,1080,house);
                G.n = 0; G.draw();
                DI.x = 550; DI.y = 475; DI.r = 50;
                DI.text = "„его вернулс€, только поел жe";  DI.draw();
                txSleep(1900);
                DI.text = "."; DI.draw();
                txSleep(750);
                DI.text = ".."; DI.draw();
                txSleep(750);
                DI.text = "..."; DI.draw();
                txSleep(750);
                DI.text = "...."; DI.draw();
                txSleep(750);
                DI.text = "Aaaa, ты поселитьс€ чтоли хочешь\n" "ко мне?"; DI.draw();
                vibor = true;
                while (vibor == true)
                {
                    txBegin();
                    txBitBlt(txDC(),0,0,1920,1080,house);
                    DI.draw();
                    c1.x = 340; c1.draw = true; c1.paint();
                    btnV1.text = "кивнуть"; btnV2.text = "убежать"; btnV1.r = 50; btnV2.r = 50; btnV1.draw(); btnV2.draw();
                    if( txMouseButtons() == 1 and
                        btnV1.x < txMouseX() and txMouseX() < btnV1.w + btnV1.x and
                        btnV1.y < txMouseY() and txMouseY() < btnV1.y + btnV1.h)
                    {
                        c1.draw = false;
                        G.x = 150; G.draw();
                        DI.text = " о мне просто так не заселитьс€ \n" "тебе предстоит пройти испытани€"; DI.draw();
                        txSleep(3500);
                        DI.text = "Ќу, приступим"; DI.draw();
                        txSleep(2500);
                        DI.text = "первым испытанием будет"; DI.draw();
                        txSleep(2500);
                        DI.text = "—Ѕќ– ”–ќ∆јя"; DI.draw();
                        txSleep(1500);
                        DI.text = "ѕойдем за мной"; DI.draw();
                        txSleep(2500);
                        kvest = true;
                        vibor = false;
                        page = "kvest1";

                    }
                    if( txMouseButtons() == 1 and
                        btnV2.x < txMouseX() and txMouseX() < btnV2.w + btnV2.x and
                        btnV2.y < txMouseY() and txMouseY() < btnV2.y + btnV2.h)
                    {
                        c1.draw = false;
                        G.x = 150; G.draw();
                        DI.text = "ј, просто встретитс€. Ќу ладно \n" "иди гул€й"; DI.draw();
                        txSleep(2500);
                        fight = true;
                        vibor = false;
                        page = "street";
                    }
                    txEnd();
                    txSleep(10);
                }
            }
        }


        if(page == "lose")
        {
            txSetFillColor(TX_BLACK);
            txClear();
            txTransparentBlt(txDC(),200,200, 800,800,Lose, 0, 0,RGB(0,0,255));
            txSelectFont ("Comic Sans MS", 150);
            txSetColor(TX_WHITE,4);
            txTextOut(980,310,"“ы проиграл!(");
            txSleep(4000);
            page = "exit";
        }
        if(page == "victory")
        {
            txSetFillColor(TX_BLACK);
            txClear();
            txTransparentBlt(txDC(),200,200, 800,800,Victory, 0, 0,RGB(0,255,0));
            txSelectFont ("Comic Sans MS", 150);
            txSetColor(TX_WHITE,4);
            txTextOut(980,310,"“ы выиграл!)");
            txSleep(4000);
            page = "exit";
        }
        if(page == "alone")
        {
            txSetFillColor(TX_BLACK);
            txClear();
            txTransparentBlt(txDC(),200,200, 800,800,Alone, 0, 0,RGB(255,0,0));
            txSelectFont ("Comic Sans MS", 40);
            txSetColor(TX_WHITE,4);
            txDrawText(980,310,1500,800,"“ы по прежнему выиграл\n" "к тебе перестали приставать\n" "призраки, но ты осталс€ один, совсем один..." );
            txSleep(10000);
            page = "exit";
        }

        if(page == "havat")
        {
            popil = true;
            txBitBlt(txDC(),0,0,1920,1080,kushat);
            txTransparentBlt(txDC(),833,751, 375,257,plate, 375*nK, 0,RGB(0,0,255));
            if(txMouseButtons() == 1)
            {
                nK += 1;
            }
            if (nK > 4)
                {
                    txBitBlt(txDC(),0,0,1920,1080,house);
                    G.draw();
                    DI.text = "Ќу иди погул€й"; DI.draw();
                    txSleep(2500);
                    page = "street";
                    helf.hp = 100;

                }


        }
        if(page == "сцена")
        {
            txBitBlt(txDC(),xL,yL,1920,1080,location);
            nKad = 0;
            txTransparentBlt(txDC(),cat.x,cat.y, cat.w,cat.h,cat.image, 83.3*nKad, 0,RGB(150,150,100));
            txTransparentBlt(txDC(),650,386,93,50,cat2,0,0,RGB(0,0,0));

            if(GetAsyncKeyState ('A') and cat.x > 820)
            {
                cat.image = cat.L;
                cat.x -= cat.v;
                nKad += 1;
                if (nKad>=3) nKad=0;
            }

            if (cat.x < 820 and kadr == 0)
            {
                DI.text = "?"; DI.x = 800; DI.y = 475;  DI.draw();
                c2.paint();
                txSleep(1000);
                DI.text = "“ы должно быть здесь новенький, \n" "такой расскраски котов не было еще"; DI.draw();
                txSleep(3999);
                kadr = 1;
            }
            if(kadr == 1)
            {
                txClear();
                txBitBlt(txDC(),xL,yL,1920,1080,location);
                txTransparentBlt(txDC(),cat.x,cat.y, cat.w,cat.h,cat.image, 83.3*nKad, 0,RGB(150,150,100));
                txTransparentBlt(txDC(),650,386,93,50,cat2,0,0,RGB(0,0,0));
                c1.paint();
                DI.text = "јга, не успел осмотретьс€ \n" "уже бабушка кака€-то покормила"; DI.draw();
                txSleep(3999);
                kadr = 2;
            }
            if(kadr == 2)
            {
                c2.paint();
                DI.text = "ќ, это наша кормилица, она всех кот€т кормит.\n" " стати, тебе нужно найти укрытие к вечеру, по ночам у нас опасно коты бездомные ход€т. \n " " »ди сходи к бабуле, может к ней получитс€ поселитьс€"; DI.draw();
                txSleep(4500);
                sten = true;
            }
            if (sten == true)
            {
                page = "street";
            }
        }
        if(page == "kvest1")
        {
        txBitBlt(txDC(),0,0,1920,1080,kv1);
        astr1.draw(cat.x,cat.y);
        astr2.draw(cat.x,cat.y);
        astr3.draw(cat.x,cat.y);
        astr4.draw(cat.x,cat.y);
        astr5.draw(cat.x,cat.y);
        astr6.draw(cat.x,cat.y);
        astr7.draw(cat.x,cat.y);
        astr8.draw(cat.x,cat.y);
        aloe1.draw(cat.x,cat.y);
        aloe2.draw(cat.x,cat.y);
        aloe3.draw(cat.x,cat.y);
        aloe4.draw(cat.x,cat.y);
        aloe5.draw(cat.x,cat.y);
        aloe6.draw(cat.x,cat.y);
        aloe7.draw(cat.x,cat.y);
        aloe8.draw(cat.x,cat.y);
        cact1.draw(cat.x,cat.y);
        cact2.draw(cat.x,cat.y);
        cact3.draw(cat.x,cat.y);
        cact4.draw(cat.x,cat.y);
        cact5.draw(cat.x,cat.y);
        cact6.draw(cat.x,cat.y);
        cact7.draw(cat.x,cat.y);
        cact8.draw(cat.x,cat.y);
        sun1.draw(cat.x,cat.y);
        sun2.draw(cat.x,cat.y);
        sun3.draw(cat.x,cat.y);
        sun4.draw(cat.x,cat.y);
        sun5.draw(cat.x,cat.y);
        sun6.draw(cat.x,cat.y);
        sun7.draw(cat.x,cat.y);
        sun8.draw(cat.x,cat.y);

        cat.drawCat();

        sprintf(A,"%d",nA);
        sprintf(L,"%d",nAl);
        sprintf(P,"%d",nP);
        sprintf(K,"%d",nC);
        txTextOut(300,400,A);
        txTextOut(300,430,L);
        txTextOut(300,460,P);
        txTextOut(300,490,K);

        if(astr1.n>=1 or astr2.n>=1 or astr3.n>=1 or astr4.n>=1 or astr5.n>=1 or astr6.n>=1 or astr7.n>=1 or astr8.n>=1)
        {
            astr1.n = 0; astr2.n = 0; astr3.n = 0; astr4.n = 0; astr5.n = 0; astr6.n = 0; astr7.n = 0; astr8.n = 0;
            nA += 1;
        }
        if(aloe1.n>=1 or aloe2.n>=1 or aloe3.n>=1 or aloe4.n>=1 or aloe5.n>=1 or aloe6.n>=1 or aloe7.n>=1 or aloe8.n>=1)
        {
            aloe1.n = 0;aloe2.n = 0;aloe3.n = 0;aloe4.n = 0;aloe5.n = 0;aloe6.n = 0;aloe7.n = 0;aloe8.n = 0;
            nAl += 1;
        }
        if(cact1.n >= 1 or cact2.n >= 1 or cact3.n >= 1 or cact4.n >= 1 or cact5.n >= 1 or cact6.n >= 1 or cact7.n >= 1 or cact8.n >= 1)
        {
            cact1.n = 0;cact2.n = 0;cact3.n = 0;cact4.n = 0;cact5.n = 0;cact6.n = 0;cact7.n = 0;cact8.n = 0;
            nC += 1;
        }
        if(sun1.n >= 1 or sun2.n >= 1 or sun3.n >= 1 or sun4.n >= 1 or sun5.n >= 1 or sun6.n >= 1 or sun7.n >= 1 or sun8.n >= 1)
        {
            sun1.n = 0;sun2.n = 0;sun3.n = 0;sun4.n = 0;sun5.n = 0;sun6.n = 0;sun7.n = 0;sun8.n = 0;
            nP += 1;
        }
        if(task1 == false and task2 == false and task3 == false)
        {
            G.draw();
            DI.x = 550; DI.y = 475; DI.r = 50; DI.v = true; DI.text = "ѕришло врем€ первого испытани€!"; DI.draw();
            txSleep(2500);
            DI.text = "Ќу что, приступим!"; DI.draw();
            txSleep(2000);
            DI.text = "ѕринеси мне 3 астры, \n" "1 подсолнух, 2 алое, 1 кактус"; DI.draw();
            txSleep(5000);
            DI.v = false; G.v = false;
            time = 300;
            kadr = 0;
            task1 = true;
        }
        if(task1 == true and time != 0)
        {
            txBegin();
            txSetColor(TX_BLACK);
            txSelectFont ("Comic Sans MS", 50);
            sprintf(str,"0:%d",time/10);
            txTextOut(700,123,str);
            kadr = 1;
            if(nA == 3 and nP == 1 and nAl == 2 and nC == 1 and time==1 and kadr == 1)
            {
                task1 = false;
            }
            if(nA != 3 and nP != 1 and nAl != 2 and nC != 1 and time==1 and kadr == 1)
            {
                DI.v = true; DI.text = "“ы не справилс€"; DI.draw();
                G.v = true; G.draw();
                txSleep(3500);
                page = "lose";
            }
            txEnd();
            time -= 1;

        }
        int x = txMouseX();
        int y = txMouseY();
        sprintf(a,"%d",x);
        sprintf(b,"%d",y);
        txTextOut(500,400,a);
        txTextOut(500,420,b);
        }


        txEnd();
        txSleep(10);

    }
txDeleteDC(cat.image);
txDeleteDC(cat.U);
txDeleteDC(cat.D);
txDeleteDC(cat.L);
txDeleteDC(cat.R);
txDeleteDC(cat.RU);
txDeleteDC(cat.RD);
txDeleteDC(cat.LU);
txDeleteDC(cat.LD);
txDeleteDC(location);
txDeleteDC(DI.image);
txDeleteDC(G.image);
txDeleteDC(Lose);
txDeleteDC(plate);
txDeleteDC(kushat);
txDeleteDC(cat2);
txDeleteDC(c1.image);
txDeleteDC(c2.image);
txDeleteDC(helf.image);
txDeleteDC(ghost.L);
txDeleteDC(ghost.R);
txDeleteDC(ghost.image);
txDeleteDC(Victory);
txDeleteDC(Alone);
txDisableAutoPause();
txTextCursor (false);
return 0;
}

